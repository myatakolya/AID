
# У 8 есть только 4 делителя: 1,2,4,8, именно их мы и будем проверять в двоичной системе счисления, т.к. это будет самый удобный метод без использования арифметических действий
def tryer(num:int):
    num = bin(num)[2::]
    if num[-4::] == '0100' or num[-4::] == '1100': #если последние 3 бита нашего числа равны 100 тогда число делится на 4 
        return 4
    if num[-4::] == '1000' or num[-4::] == '0000': #если последние 3 бита нашего числа равны 000 тогда число делится на 8
        return 8
    if num[-1] == '0': #если послелний бит нашего числа равен 0, тогда число делится на 2
        return 2
    if num[-1] == '1': #и если последний бит нашего числа равен 1, тогда НОД = 1
        return 1
    
def practice_1():

    try:
        num = int(input("Введите 10 значное число: "))
    except Exception:
        num = int(input("Ввод принимает только 10 значные числа и только их: "))
    if len(str(num)) != 10:
        raise ValueError("Введено не 10 значное число, либо вообще не число, не знаю что Вы там вводите, но мне страшно")
    
    print(f"НОД = {tryer(num)}") # вызываем функцию которая находит НОД и сразу выводим результат её работы
        
practice_1()